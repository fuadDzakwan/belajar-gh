Welcome To Belajar GH dengan GitHUB
GitHub CLI
gh is GitHub on the command line. It brings pull requests, issues, and other GitHub concepts to the terminal next to where you are already working with git and your code.

Installation
You can find installation instructions on our README.

Authentication
Run gh auth login to authenticate with your GitHub account. gh will respect tokens set using GITHUB_TOKEN.

GitHub Enterprise Server
GitHub CLI supports GHES 2.20 and above. To authenticate with a GitHub Enterprise instance, run:

gh auth login --hostname <hostname>
You will be prompted to either authenticate using your browser, or to paste a token.

Setting an editor
To set your preferred editor, you can use gh config set editor <editor>. Read more about gh config.

Additionally if the above is not set, for macOS and Linux, gh will respect editor environment variables based on your OS and shell setup.

On macOS and Linux, the default editor is Nano. On Windows, the default editor is Notepad.

Setting your git protocol
To set your preferred git protocol, you can use gh config set git_protocol { ssh | https }. Read more about gh config.

Disable interactivity
To disable interactive prompts, you can use gh config set prompt disabled. Read more about gh config.

Extending the CLI
There are several ways you can make gh your own.

Create shorthands using gh alias set
Make custom API queries using gh api
Use environment variables
Feedback
Thank you for checking out GitHub CLI! Please open an issue to send us feedback. We're looking forward to hearing it.
...................................................................................
gh actions
Learn about working with GitHub actions

Synopsis
Welcome to GitHub Actions on the command line.

GitHub CLI integrates with Actions to help you manage runs and workflows.

Interacting with workflow runs
gh run list: List recent workflow runs
gh run view: View details for a workflow run or one of its jobs
gh run watch: Watch a workflow run while it executes
gh run rerun: Rerun a failed workflow run
gh run download: Download artifacts generated by runs

To see more help, run 'gh help run '

Interacting with workflow files
gh workflow list: List all the workflow files in your repository
gh workflow view: View details for a workflow file
gh workflow enable: Enable a workflow file
gh workflow disable: Disable a workflow file
gh workflow run: Trigger a workflow_dispatch run for a workflow file

To see more help, run 'gh help workflow '

gh actions [flags]
Options inherited from parent commands
      --help   Show help for command
.........................................................................
gh alias
Create command shortcuts

Synopsis
Aliases can be used to make shortcuts for gh commands or to compose multiple commands.

Run "gh help alias set" to learn more.

Options inherited from parent commands
      --help   Show help for command

* gh alias delete
Delete an alias

gh alias delete <alias> [flags]
Options inherited from parent commands
      --help   Show help for command
      
      
* gh alias list
List your aliases

Synopsis
This command prints out all of the aliases gh is configured to use.

gh alias list [flags]
Options inherited from parent commands
      --help   Show help for command
      
* gh alias set
Create a shortcut for a gh command

Synopsis
Define a word that will expand to a full gh command when invoked.

The expansion may specify additional arguments and flags. If the expansion includes positional placeholders such as "$1", extra arguments that follow the alias will be inserted appropriately. Otherwise, extra arguments will be appended to the expanded command.

Use "-" as expansion argument to read the expansion string from standard input. This is useful to avoid quoting issues when defining expansions.

If the expansion starts with "!" or if "--shell" was given, the expansion is a shell expression that will be evaluated through the "sh" interpreter when the alias is invoked. This allows for chaining multiple commands via piping and redirection.

gh alias set <alias> <expansion> [flags]
Examples
# note: Command Prompt on Windows requires using double quotes for arguments
$ gh alias set pv 'pr view'
$ gh pv -w 123  #=> gh pr view -w 123

$ gh alias set bugs 'issue list --label=bugs'
$ gh bugs

$ gh alias set homework 'issue list --assignee @me'
$ gh homework

$ gh alias set epicsBy 'issue list --author="$1" --label="epic"'
$ gh epicsBy vilmibm  #=> gh issue list --author="vilmibm" --label="epic"

$ gh alias set --shell igrep 'gh issue list --label="$1" | grep "$2"'
$ gh igrep epic foo  #=> gh issue list --label="epic" | grep "foo"

Options
  -s, --shell   Declare an alias to be passed through a shell interpreter
Options inherited from parent commands
      --help   Show help for command

----------------------------------------------
